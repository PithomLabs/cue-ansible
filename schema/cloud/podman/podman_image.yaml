
  module: podman_image
  author:
      - Sam Doran (@samdoran)
  version_added: '2.8'
  short_description: Pull images for use by podman
  notes: []
  description:
      - Build, pull, or push images using Podman.
  options:
    name:
      description:
        - Name of the image to pull, push, or delete. It may contain a tag using the format C(image:tag).
      required: True
    executable:
      description:
        - Path to C(podman) executable if it is not in the C($PATH) on the machine running C(podman)
      default: 'podman'
      type: str
    ca_cert_dir:
      description:
        - Path to directory containing TLS certificates and keys to use
      type: 'path'
    tag:
      description:
        - Tag of the image to pull, push, or delete.
      default: "latest"
    pull:
      description: Whether or not to pull the image.
      default: True
    push:
      description: Whether or not to push an image.
      default: False
    path:
      description: Path to directory containing the build file.
    force:
      description:
        - Whether or not to force push or pull an image. When building, force the build even if the image already exists.
    state:
      description:
        - Whether an image should be present, absent, or built.
      default: "present"
      choices:
        - present
        - absent
        - build
    validate_certs:
      description:
        - Require HTTPS and validate certificates when pulling or pushing. Also used during build if a pull or push is necessary.
      default: True
      aliases:
        - tlsverify
        - tls_verify
    password:
      description:
        - Password to use when authenticating to remote registries.
      type: str
    username:
      description:
        - username to use when authenticating to remote registries.
      type: str
    auth_file:
      description:
        - Path to file containing authorization credentials to the remote registry
      aliases:
        - authfile
    build:
      description: Arguments that control image build.
      aliases:
        - build_args
        - buildargs
      suboptions:
        annotation:
          description:
            - Dictionary of key=value pairs to add to the image. Only works with OCI images. Ignored for Docker containers.
          type: str
        force_rm:
          description:
            - Always remove intermediate containers after a build, even if the build is unsuccessful.
          type: bool
          default: False
        format:
          description:
            - Format of the built image.
          choices:
            - docker
            - oci
          default: "oci"
        cache:
          description:
            - Whether or not to use cached layers when building an image
          type: bool
          default: True
        rm:
          description: Remove intermediate containers after a successful build
          type: bool
          default: True
    push_args:
      description: Arguments that control pushing images.
      suboptions:
        compress:
          description:
            - Compress tarball image layers when pushing to a directory using the 'dir' transport.
          type: bool
        format:
          description:
            - Manifest type to use when pushing an image using the 'dir' transport (default is manifest type of source)
          choices:
            - oci
            - v2s1
            - v2s2
        remove_signatures:
          description: Discard any pre-existing signatures in the image
          type: bool
        sign_by:
          description:
            - Path to a key file to use to sign the image.
        dest:
          description: Path or URL where image will be pushed.
        transport:
          description:
            - Transport to use when pushing in image. If no transport is set, will attempt to push to a remote registry.
          choices:
            - dir
            - docker-archive
            - docker-daemon
            - oci-archive
            - ostree
