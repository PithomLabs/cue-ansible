
---
module: ec2_ami
version_added: "1.3"
short_description: Create or destroy an image (AMI) in ec2
description:
     - Registers or deregisters ec2 images.
options:
  instance_id:
    description:
      - Instance ID to create the AMI from.
    type: str
  name:
    description:
      - The name of the new AMI.
    type: str
  architecture:
    version_added: "2.3"
    description:
      - The target architecture of the image to register
    default: "x86_64"
    type: str
  kernel_id:
    version_added: "2.3"
    description:
      - The target kernel id of the image to register.
    type: str
  virtualization_type:
    version_added: "2.3"
    description:
      - The virtualization type of the image to register.
    default: "hvm"
    type: str
  root_device_name:
    version_added: "2.3"
    description:
      - The root device name of the image to register.
    type: str
  wait:
    description:
      - Wait for the AMI to be in state 'available' before returning.
    default: false
    type: bool
  wait_timeout:
    description:
      - How long before wait gives up, in seconds.
    default: 900
    type: int
  state:
    description:
      - Register or deregister an AMI.
    default: 'present'
    choices: [ "absent", "present" ]
    type: str
  description:
    description:
      - Human-readable string describing the contents and purpose of the AMI.
    type: str
  no_reboot:
    description:
      - Flag indicating that the bundling process should not attempt to shutdown the instance before bundling. If this flag is True, the
        responsibility of maintaining file system integrity is left to the owner of the instance.
    default: false
    type: bool
  image_id:
    description:
      - Image ID to be deregistered.
    type: str
  device_mapping:
    version_added: "2.0"
    description:
      - List of device hashes/dictionaries with custom configurations (same block-device-mapping parameters).
    type: list
    elements: dict
    suboptions:
        device_name:
          type: str
          description: The device name. For example C(/dev/sda).
        volume_type:
          type: str
          description: The volume type.  Defaults to C(gp2) when not set.
        delete_on_termination:
          type: bool
          description: Whether the device should be automatically deleted when the Instance is terminated.
        no_device:
          type: bool
          description: Suppresses the specified device included in the block device mapping of the AMI.
        snapshot_id:
          type: str
          description: The ID of the Snapshot.
        iops:
          type: int
          description: When using an C(io1) I(volume_type) this sets the number of IOPS provisioned for the volume
        encrypted:
          type: bool
          description: Whether the volume should be encrypted.
        volume_size:
          aliases: ['size']
          type: int
          description: The size of the volume (in GiB)
  delete_snapshot:
    description:
      - Delete snapshots when deregistering the AMI.
    default: false
    type: bool
  tags:
    description:
      - A dictionary of tags to add to the new image; '{"key":"value"}' and '{"key":"value","key":"value"}'
    version_added: "2.0"
    type: dict
  purge_tags:
    description: Whether to remove existing tags that aren't passed in the C(tags) parameter
    version_added: "2.5"
    default: false
    type: bool
  launch_permissions:
    description:
      - Users and groups that should be able to launch the AMI. Expects dictionary with a key of user_ids and/or group_names. user_ids should
        be a list of account ids. group_name should be a list of groups, "all" is the only acceptable value currently.
      - You must pass all desired launch permissions if you wish to modify existing launch permissions (passing just groups will remove all users)
    version_added: "2.0"
    type: dict
  image_location:
    description:
      - The s3 location of an image to use for the AMI.
    version_added: "2.5"
    type: str
  enhanced_networking:
    description:
      - A boolean representing whether enhanced networking with ENA is enabled or not.
    version_added: "2.5"
    type: bool
  billing_products:
    description:
      - A list of valid billing codes. To be used with valid accounts by aws marketplace vendors.
    version_added: "2.5"
    type: list
    elements: str
  ramdisk_id:
    description:
      - The ID of the RAM disk.
    version_added: "2.5"
    type: str
  sriov_net_support:
    description:
      - Set to simple to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.
    version_added: "2.5"
    type: str
author:
    - "Evan Duffield (@scicoin-project) <eduffield@iacquire.com>"
    - "Constantin Bugneac (@Constantin07) <constantin.bugneac@endava.com>"
    - "Ross Williams (@gunzy83) <gunzy83au@gmail.com>"
    - "Willem van Ketwich (@wilvk) <willvk@gmail.com>"
extends_documentation_fragment:
    - aws
    - ec2
