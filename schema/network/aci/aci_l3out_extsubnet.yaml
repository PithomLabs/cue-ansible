
---
module: aci_l3out_extsubnet
short_description: Manage External Subnet objects (l3extSubnet:extsubnet)
description:
- Manage External Subnet objects (l3extSubnet:extsubnet)
version_added: '2.9'
options:
  tenant:
    description:
    - Name of an existing tenant.
    type: str
    required: yes
    aliases: [ tenant_name ]
  l3out:
    description:
    - Name of an existing L3Out.
    type: str
    required: yes
    aliases: [ l3out_name ]
  extepg:
    description:
    - Name of an existing ExtEpg.
    type: str
    required: yes
    aliases: [ extepg_name ]
  network:
    description:
    - The network address for the Subnet.
    type: str
    required: yes
    aliases: [ address, ip ]
  subnet_name:
    description:
    - Name of External Subnet being created.
    type: str
    aliases: [ name ]
  description:
    description:
    - Description for the External Subnet.
    type: str
    aliases: [ descr ]
  scope:
    description:
    - Determines the scope of the Subnet.
    - The C(export-rtctrl) option controls which external networks are advertised out of the fabric using route-maps and IP prefix-lists.
    - The C(import-security) option classifies for the external EPG.
      The rules and contracts defined in this external EPG apply to networks matching this subnet.
    - The C(shared-rtctrl) option controls which external prefixes are advertised to other tenants for shared services.
    - The C(shared-security) option configures the classifier for the subnets in the VRF where the routes are leaked.
    - The APIC defaults to C(import-security) when unset during creation.
    type: list
    choices: [ export-rtctrl, import-security, shared-rtctrl, shared-security ]
  state:
    description:
    - Use C(present) or C(absent) for adding or removing.
    - Use C(query) for listing an object or multiple objects.
    type: str
    choices: [ absent, present, query ]
    default: present
extends_documentation_fragment: aci
notes:
- The C(tenant) and C(domain) and C(vrf) used must exist before using this module in your playbook.
  The M(aci_tenant) and M(aci_domain) and M(aci_vrf) modules can be used for this.
seealso:
- module: aci_tenant
- module: aci_domain
- module: aci_vrf
- name: APIC Management Information Model reference
  description: More information about the internal APIC class B(l3ext:Out).
  link: https://developer.cisco.com/docs/apic-mim-ref/
author:
- Rostyslav Davydenko (@rost-d)
