
---
module: ovh_ip_failover
short_description: Manage OVH IP failover address
description:
    - Manage OVH (French European hosting provider) IP Failover Address. For now, this module can only be used to move
      an ip failover (or failover block) between services
version_added: "2.8"
author: "Pascal HERAUD (@pascalheraud)"
notes:
    - Uses the python OVH Api U(https://github.com/ovh/python-ovh).
      You have to create an application (a key and secret) with a consummer
      key as described into U(https://eu.api.ovh.com/g934.first_step_with_api)
requirements:
    - ovh >=  0.4.8
options:
    name:
        required: true
        description:
            - The IP address to manage (can be a single IP like 1.1.1.1
              or a block like 1.1.1.1/28 )
    service:
        required: true
        description:
            - The name of the OVH service this IP address should be routed
    endpoint:
        required: true
        description:
            - The endpoint to use ( for instance ovh-eu)
    wait_completion:
        required: false
        default: true
        type: bool
        description:
            - If true, the module will wait for the IP address to be moved.
              If false, exit without waiting. The taskId will be returned
              in module output
    wait_task_completion:
        required: false
        default: 0
        description:
            - If not 0, the module will wait for this task id to be
              completed. Use wait_task_completion if you want to wait for
              completion of a previously executed task with
              wait_completion=false. You can execute this module repeatedly on
              a list of failover IPs using wait_completion=false (see examples)
    application_key:
        required: true
        description:
            - The applicationKey to use
    application_secret:
        required: true
        description:
            - The application secret to use
    consumer_key:
        required: true
        description:
            - The consumer key to use
    timeout:
        required: false
        default: 120
        description:
            - The timeout in seconds used to wait for a task to be
              completed. Default is 120 seconds.

