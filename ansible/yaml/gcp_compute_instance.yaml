
---
module: gcp_compute_instance
description:
- An instance is a virtual machine (VM) hosted on Google's infrastructure.
short_description: Creates a GCP Instance
version_added: '2.6'
author: Google Inc. (@googlecloudplatform)
requirements:
- python >= 2.6
- requests >= 2.18.4
- google-auth >= 1.3.0
options:
  state:
    description:
    - Whether the given object should exist in GCP
    choices:
    - present
    - absent
    default: present
    type: str
  can_ip_forward:
    description:
    - Allows this instance to send and receive packets with non-matching destination
      or source IPs. This is required if you plan to use this instance to forward
      routes.
    required: false
    type: bool
    aliases:
    - ip_forward
  deletion_protection:
    description:
    - Whether the resource should be protected against deletion.
    required: false
    type: bool
    version_added: '2.9'
  disks:
    description:
    - An array of disks that are associated with the instances that are created from
      this template.
    required: false
    type: list
    suboptions:
      auto_delete:
        description:
        - Specifies whether the disk will be auto-deleted when the instance is deleted
          (but not when the disk is detached from the instance).
        - 'Tip: Disks should be set to autoDelete=true so that leftover disks are
          not left behind on machine deletion.'
        required: false
        type: bool
      boot:
        description:
        - Indicates that this is a boot disk. The virtual machine will use the first
          partition of the disk for its root filesystem.
        required: false
        type: bool
      device_name:
        description:
        - Specifies a unique device name of your choice that is reflected into the
          /dev/disk/by-id/google-* tree of a Linux operating system running within
          the instance. This name can be used to reference the device for mounting,
          resizing, and so on, from within the instance.
        required: false
        type: str
      disk_encryption_key:
        description:
        - Encrypts or decrypts a disk using a customer-supplied encryption key.
        required: false
        type: dict
        suboptions:
          raw_key:
            description:
            - Specifies a 256-bit customer-supplied encryption key, encoded in RFC
              4648 base64 to either encrypt or decrypt this resource.
            required: false
            type: str
          rsa_encrypted_key:
            description:
            - Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied
              encryption key to either encrypt or decrypt this resource.
            required: false
            type: str
      index:
        description:
        - Assigns a zero-based index to this disk, where 0 is reserved for the boot
          disk. For example, if you have many disks attached to an instance, each
          disk would have a unique index number. If not specified, the server will
          choose an appropriate value.
        required: false
        type: int
      initialize_params:
        description:
        - Specifies the parameters for a new disk that will be created alongside the
          new instance. Use initialization parameters to create boot disks or local
          SSDs attached to the new instance.
        required: false
        type: dict
        suboptions:
          disk_name:
            description:
            - Specifies the disk name. If not specified, the default is to use the
              name of the instance.
            required: false
            type: str
          disk_size_gb:
            description:
            - Specifies the size of the disk in base-2 GB.
            required: false
            type: int
          disk_type:
            description:
            - Reference to a disk type.
            - Specifies the disk type to use to create the instance.
            - If not specified, the default is pd-standard.
            required: false
            type: str
          source_image:
            description:
            - The source image to create this disk. When creating a new instance,
              one of initializeParams.sourceImage or disks.source is required. To
              create a disk with one of the public operating system images, specify
              the image by its family name.
            required: false
            type: str
            aliases:
            - image
            - image_family
          source_image_encryption_key:
            description:
            - The customer-supplied encryption key of the source image. Required if
              the source image is protected by a customer-supplied encryption key.
            - Instance templates do not store customer-supplied encryption keys, so
              you cannot create disks for instances in a managed instance group if
              the source images are encrypted with your own keys.
            required: false
            type: dict
            suboptions:
              raw_key:
                description:
                - Specifies a 256-bit customer-supplied encryption key, encoded in
                  RFC 4648 base64 to either encrypt or decrypt this resource.
                required: false
                type: str
      interface:
        description:
        - Specifies the disk interface to use for attaching this disk, which is either
          SCSI or NVME. The default is SCSI.
        - Persistent disks must always use SCSI and the request will fail if you attempt
          to attach a persistent disk in any other format than SCSI.
        - 'Some valid choices include: "SCSI", "NVME"'
        required: false
        type: str
      mode:
        description:
        - The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If
          not specified, the default is to attach the disk in READ_WRITE mode.
        - 'Some valid choices include: "READ_WRITE", "READ_ONLY"'
        required: false
        type: str
      source:
        description:
        - Reference to a disk. When creating a new instance, one of initializeParams.sourceImage
          or disks.source is required.
        - If desired, you can also attach existing non-root persistent disks using
          this property. This field is only applicable for persistent disks.
        - 'This field represents a link to a Disk resource in GCP. It can be specified
          in two ways. First, you can place a dictionary with key ''selfLink'' and
          value of your resource''s selfLink Alternatively, you can add `register:
          name-of-resource` to a gcp_compute_disk task and then set this source field
          to "{{ name-of-resource }}"'
        required: false
        type: dict
      type:
        description:
        - Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified,
          the default is PERSISTENT.
        - 'Some valid choices include: "SCRATCH", "PERSISTENT"'
        required: false
        type: str
  guest_accelerators:
    description:
    - List of the type and count of accelerator cards attached to the instance .
    required: false
    type: list
    suboptions:
      accelerator_count:
        description:
        - The number of the guest accelerator cards exposed to this instance.
        required: false
        type: int
      accelerator_type:
        description:
        - Full or partial URL of the accelerator type resource to expose to this instance.
        required: false
        type: str
  hostname:
    description:
    - The hostname of the instance to be created. The specified hostname must be RFC1035
      compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal
      when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal
      when using zonal DNS.
    required: false
    type: str
    version_added: '2.9'
  labels:
    description:
    - Labels to apply to this instance. A list of key->value pairs.
    required: false
    type: dict
    version_added: '2.9'
  metadata:
    description:
    - The metadata key/value pairs to assign to instances that are created from this
      template. These pairs can consist of custom metadata or predefined keys.
    required: false
    type: dict
  machine_type:
    description:
    - A reference to a machine type which defines VM kind.
    required: false
    type: str
  min_cpu_platform:
    description:
    - Specifies a minimum CPU platform for the VM instance. Applicable values are
      the friendly names of CPU platforms .
    required: false
    type: str
  name:
    description:
    - The name of the resource, provided by the client when initially creating the
      resource. The resource name must be 1-63 characters long, and comply with RFC1035.
      Specifically, the name must be 1-63 characters long and match the regular expression
      `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase
      letter, and all following characters must be a dash, lowercase letter, or digit,
      except the last character, which cannot be a dash.
    required: false
    type: str
  network_interfaces:
    description:
    - An array of configurations for this interface. This specifies how this interface
      is configured to interact with other network services, such as connecting to
      the internet. Only one network interface is supported per instance.
    required: false
    type: list
    suboptions:
      access_configs:
        description:
        - An array of configurations for this interface. Currently, only one access
          config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified,
          then this instance will have no external internet access.
        required: false
        type: list
        suboptions:
          name:
            description:
            - The name of this access configuration. The default and recommended name
              is External NAT but you can use any arbitrary string you would like.
              For example, My external IP or Network Access.
            required: true
            type: str
          nat_ip:
            description:
            - Reference to an address.
            - An external IP address associated with this instance.
            - Specify an unused static external IP address available to the project
              or leave this field undefined to use an IP from a shared ephemeral IP
              address pool. If you specify a static external IP address, it must live
              in the same region as the zone of the instance.
            - 'This field represents a link to a Address resource in GCP. It can be
              specified in two ways. First, you can place a dictionary with key ''address''
              and value of your resource''s address Alternatively, you can add `register:
              name-of-resource` to a gcp_compute_address task and then set this nat_ip
              field to "{{ name-of-resource }}"'
            required: false
            type: dict
          type:
            description:
            - The type of configuration. The default and only option is ONE_TO_ONE_NAT.
            - 'Some valid choices include: "ONE_TO_ONE_NAT"'
            required: true
            type: str
          set_public_ptr:
            description:
            - Specifies whether a public DNS PTR record should be created to map the
              external IP address of the instance to a DNS domain name.
            required: false
            type: bool
            version_added: '2.10'
          public_ptr_domain_name:
            description:
            - The DNS domain name for the public PTR record. You can set this field
              only if the setPublicPtr field is enabled.
            required: false
            type: str
            version_added: '2.10'
          network_tier:
            description:
            - This signifies the networking tier used for configuring this access
              configuration. If an AccessConfig is specified without a valid external
              IP address, an ephemeral IP will be created with this networkTier. If
              an AccessConfig with a valid external IP address is specified, it must
              match that of the networkTier associated with the Address resource owning
              that IP.
            - 'Some valid choices include: "PREMIUM", "STANDARD"'
            required: false
            type: str
            version_added: '2.10'
      alias_ip_ranges:
        description:
        - An array of alias IP ranges for this network interface. Can only be specified
          for network interfaces on subnet-mode networks.
        required: false
        type: list
        suboptions:
          ip_cidr_range:
            description:
            - The IP CIDR range represented by this alias IP range.
            - This IP CIDR range must belong to the specified subnetwork and cannot
              contain IP addresses reserved by system or used by other network interfaces.
              This range may be a single IP address (e.g. 10.2.3.4), a netmask (e.g.
              /24) or a CIDR format string (e.g. 10.1.2.0/24).
            required: false
            type: str
          subnetwork_range_name:
            description:
            - Optional subnetwork secondary range name specifying the secondary range
              from which to allocate the IP CIDR range for this alias IP range. If
              left unspecified, the primary range of the subnetwork will be used.
            required: false
            type: str
      network:
        description:
        - Specifies the title of an existing network. Not setting the network title
          will select the default network interface, which could have SSH already
          configured .
        - 'This field represents a link to a Network resource in GCP. It can be specified
          in two ways. First, you can place a dictionary with key ''selfLink'' and
          value of your resource''s selfLink Alternatively, you can add `register:
          name-of-resource` to a gcp_compute_network task and then set this network
          field to "{{ name-of-resource }}"'
        required: false
        type: dict
      network_ip:
        description:
        - An IPv4 internal network address to assign to the instance for this network
          interface. If not specified by the user, an unused internal IP is assigned
          by the system.
        required: false
        type: str
      subnetwork:
        description:
        - Reference to a VPC network.
        - If the network resource is in legacy mode, do not provide this property.
          If the network is in auto subnet mode, providing the subnetwork is optional.
          If the network is in custom subnet mode, then this field should be specified.
        - 'This field represents a link to a Subnetwork resource in GCP. It can be
          specified in two ways. First, you can place a dictionary with key ''selfLink''
          and value of your resource''s selfLink Alternatively, you can add `register:
          name-of-resource` to a gcp_compute_subnetwork task and then set this subnetwork
          field to "{{ name-of-resource }}"'
        required: false
        type: dict
  scheduling:
    description:
    - Sets the scheduling options for this instance.
    required: false
    type: dict
    suboptions:
      automatic_restart:
        description:
        - Specifies whether the instance should be automatically restarted if it is
          terminated by Compute Engine (not terminated by a user).
        - You can only set the automatic restart option for standard instances. Preemptible
          instances cannot be automatically restarted.
        required: false
        type: bool
      on_host_maintenance:
        description:
        - Defines the maintenance behavior for this instance. For standard instances,
          the default behavior is MIGRATE. For preemptible instances, the default
          and only possible behavior is TERMINATE.
        - For more information, see Setting Instance Scheduling Options.
        required: false
        type: str
      preemptible:
        description:
        - Defines whether the instance is preemptible. This can only be set during
          instance creation, it cannot be set or changed after the instance has been
          created.
        required: false
        type: bool
  service_accounts:
    description:
    - A list of service accounts, with their specified scopes, authorized for this
      instance. Only one service account per VM instance is supported.
    required: false
    type: list
    suboptions:
      email:
        description:
        - Email address of the service account.
        required: false
        type: str
      scopes:
        description:
        - The list of scopes to be made available for this service account.
        required: false
        type: list
  shielded_instance_config:
    description:
    - Configuration for various parameters related to shielded instances.
    required: false
    type: dict
    version_added: '2.9'
    suboptions:
      enable_secure_boot:
        description:
        - Defines whether the instance has Secure Boot enabled.
        required: false
        type: bool
      enable_vtpm:
        description:
        - Defines whether the instance has the vTPM enabled.
        required: false
        type: bool
      enable_integrity_monitoring:
        description:
        - Defines whether the instance has integrity monitoring enabled.
        required: false
        type: bool
  status:
    description:
    - 'The status of the instance. One of the following values: PROVISIONING, STAGING,
      RUNNING, STOPPING, SUSPENDING, SUSPENDED, and TERMINATED.'
    - As a user, use RUNNING to keep a machine "on" and TERMINATED to turn a machine
      off .
    - 'Some valid choices include: "PROVISIONING", "STAGING", "RUNNING", "STOPPING",
      "SUSPENDING", "SUSPENDED", "TERMINATED"'
    required: false
    type: str
    version_added: '2.8'
  tags:
    description:
    - A list of tags to apply to this instance. Tags are used to identify valid sources
      or targets for network firewalls and are specified by the client during instance
      creation. The tags can be later modified by the setTags method. Each tag within
      the list must comply with RFC1035.
    required: false
    type: dict
    suboptions:
      fingerprint:
        description:
        - Specifies a fingerprint for this request, which is essentially a hash of
          the metadata's contents and used for optimistic locking.
        - The fingerprint is initially generated by Compute Engine and changes after
          every request to modify or update metadata. You must always provide an up-to-date
          fingerprint hash in order to update or change metadata.
        required: false
        type: str
      items:
        description:
        - An array of tags. Each tag must be 1-63 characters long, and comply with
          RFC1035.
        required: false
        type: list
  zone:
    description:
    - A reference to the zone where the machine resides.
    required: true
    type: str
  project:
    description:
    - The Google Cloud Platform project to use.
    type: str
  auth_kind:
    description:
    - The type of credential used.
    type: str
    required: true
    choices:
    - application
    - machineaccount
    - serviceaccount
  service_account_contents:
    description:
    - The contents of a Service Account JSON file, either in a dictionary or as a
      JSON string that represents it.
    type: jsonarg
  service_account_file:
    description:
    - The path of a Service Account JSON file if serviceaccount is selected as type.
    type: path
  service_account_email:
    description:
    - An optional service account email address if machineaccount is selected and
      the user does not wish to use the default email.
    type: str
  scopes:
    description:
    - Array of scopes to be used
    type: list
  env_type:
    description:
    - Specifies which Ansible environment you're running this module within.
    - This should not be set unless you know what you're doing.
    - This only alters the User Agent string for any API requests.
    type: str
